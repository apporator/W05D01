quit
@tail.prev
@tail.next
@head.next
@head.prev
c
disp
disp @tail
disp @tauk
disp @head
quit
c
disp
disp @tail
disp @head
disp tail
disp head
quit
c
disp
disp @tail
disp @head
quit
c
disp tail
disp head
quit
cur_node == head
disp cur_node
quit
head.next == tail && tail.prev == head
disp
disp tail
disp head
quit
n
disp tail
disp head
quit
disp head
quit
disp tail
tail
head
tail.prev == head
head.next == tail
head
head.next
quit
disp tail
disp head
quit
head
quit
@head
head
quit
disp self.store
disp store
c
disp store
quit
@store
disp num_buckets
disp store
n
quit
store
disp store
quit
disp hash_num
quit
disp hash_num
quit
hash_string.hash
disp
disp self
disp hash_string
quit
c
disp store
disp all_items
quit
c
disp
disp item
disp
disp item % num_buckets
disp store
disp num_buckets
disp all_items
quit
disp store
disp count
disp coynt
c
disp
disp count
disp store.length
quit
store.length
c
disp all_items
disp store
quit
disp all_items
disp store
quit
disp store
quit
n
c
break 97
include?(num)
c
n
set.include?(1)
disp set
disp store
n
disp store
c
break 97
break 98
store
include?(1)
include?(num)
disp num
quit
